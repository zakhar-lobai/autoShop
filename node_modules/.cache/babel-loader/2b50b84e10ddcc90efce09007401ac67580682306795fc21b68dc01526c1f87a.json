{"ast":null,"code":"import { FETCH_START, FETCH_SUCCESS, FETCH_FAILURE } from './actionTypes';\nexport const fetchData = () => async dispatch => {\n  dispatch({\n    type: FETCH_START\n  });\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n    const data = await response.json();\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: new Error(error.message)\n    });\n  }\n};","map":{"version":3,"names":["FETCH_START","FETCH_SUCCESS","FETCH_FAILURE","fetchData","dispatch","type","response","fetch","data","json","payload","error","Error","message"],"sources":["/Users/yura13/Desktop/course/src/store/actions/dataActions.ts"],"sourcesContent":["\nimport { RootState } from '../index';\nimport { FETCH_START, FETCH_SUCCESS, FETCH_FAILURE } from './actionTypes';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, AnyAction>;\nexport type AppDispatch = ThunkDispatch<RootState, any, AnyAction>;\n\nexport const fetchData = (): AppThunk => async dispatch => {\n        dispatch({ type: FETCH_START });\n        try {\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n            const data = await response.json();\n            dispatch({ type: FETCH_SUCCESS, payload: data });\n        } catch (error: any) {\n            dispatch({ type: FETCH_FAILURE, payload: new Error(error.message) });\n        }\n    };"],"mappings":"AAEA,SAASA,WAAW,EAAEC,aAAa,EAAEC,aAAa,QAAQ,eAAe;AAOzE,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAgB,MAAMC,QAAQ,IAAI;EACnDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAY,CAAC,CAAC;EAC/B,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;IAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,aAAa;MAAES,OAAO,EAAEF;IAAK,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOG,KAAU,EAAE;IACjBP,QAAQ,CAAC;MAAEC,IAAI,EAAEH,aAAa;MAAEQ,OAAO,EAAE,IAAIE,KAAK,CAACD,KAAK,CAACE,OAAO;IAAE,CAAC,CAAC;EACxE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}